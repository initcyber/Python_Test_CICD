name: Semgrep weekly Scan
on:
  workflow_call:
    secrets:
      Repo_token:
        required: true


permissions:
     # id-token: write   # This is required for requesting the JWT
      contents: read    # This is required for actions/checkout

jobs:
  semgrep-full:
    runs-on: ubuntu-latest
    steps:
    
    #step1: Checkout semgrep rules
      - name: Checkout Semgrep rules
        uses: actions/checkout@v4
        with:
          repository: initcyber/SemgrepRules
          ref: main
          path: ./SemgrepRules
          token: ${{ secrets.Repo_token }} #Generate your github classic token


    #step2: Checkout Code.
      - name: clone application source code
        uses: actions/checkout@v4
        with:
          path: ./code
    
      #step3: Install Semgrep
      - name: Install Semgrep
        run: |
          python -m pip install --upgrade pip
          python3 -m pip install semgrep
      
      #step4: Code scan
      - name: Scan
    #    env:
    #      SEMGREP_RULES_PATH: ./SemgrepRules
        run: |
          python -m semgrep --config "p/ci" --config auto . --output $(date +"%d-%m-%Y").json --json > scanSummry.txt 2>&1

      #step5: get current date  
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%d-%m-%Y')"

      #step6: Push report to artifact.
      - name: save report as pipeline artifact
        uses: actions/upload-artifact@v3
        with:
            name: ${{ steps.date.outputs.date }}.json
            path: .

      #step7: cat file
      - name: Get current file
        id: scan_summary
        run: cat scanSummry.txt
        
      #step8: Connect to Tailscale Environment
      - name: Tailscale
        uses: tailscale/github-action@v2
        with:
          oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
          tags: tag:cicd-python
          
      # step8: authenticate with Tailscale
      - name: Connect to Homelab
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_STS }}
          role-session-name: GHASeesion
          aws-region: ${{ env.AWS_REGION }}
      
      # step9: Upload a file to Homelab
      - name: upload file to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.BLUE_IP }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.PORT }}
          source: './${{ steps.date.outputs.date }}.json'
          target: '/home/justin/python_test/'
          overwrite: true
          
#name: cicd-python

#on:
#  push:
#    branches:
#      - main

#jobs:
#  build:
#    runs-on: ubuntu-latest
#    steps:
#      -
#        name: Checkout
#        uses: actions/checkout@v4
#      -
#        name: Login to Docker Hub
#        uses: docker/login-action@v3
#        with:
#          username: ${{ secrets.DOCKER_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_TOKEN }}
#      -
#        name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v3
#      -
#        name: Build and push
#        uses: docker/build-push-action@v5
#        with:
#          context: .
#          push: true
#          tags: ${{ secrets.DOCKER_USERNAME }}/${{ github.event.repository.name }}:latest
#          
#  deploy:
#    runs-on: ubuntu-latest
#    steps:
#        name: Tailscale
#        uses: tailscale/github-action@v2
#        with:
#          oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
#          oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
#          tags: tag:cicd-python
